apiVersion: apps/v1
kind: Deployment
metadata:
  name: samlproxy
  namespace: saml-tools
  labels:
    app: samlproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: samlproxy
  template:
    metadata:
      labels:
        app: samlproxy
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: key-converter
        image: alpine:latest
        securityContext:
          runAsUser: 0  # Run as root for apt operations
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Checking key format..."
          mkdir -p /tmp/certs
          cat /certs/tls.crt > /tmp/certs/cert.pem
          
          # Extract the key and convert it to PKCS1 format if needed
          echo "Converting key to PKCS1 format..."
          apk add --no-cache openssl
          cat /certs/tls.key > /tmp/certs/key_orig.pem
          openssl rsa -in /tmp/certs/key_orig.pem -out /tmp/certs/key.pem
          rm /tmp/certs/key_orig.pem
          
          chmod 600 /tmp/certs/key.pem
          echo "Certificate and key prepared in /tmp/certs/"
        volumeMounts:
        - name: cert-volume
          mountPath: /certs/
        - name: converted-certs
          mountPath: /tmp/certs/
      containers:
      - name: samlproxy
        image: registry.digitalocean.com/samltools/samlproxy:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8082
        env:
        - name: CONFIG_FILE
          value: "/app/configs/samlproxy.yaml"
        volumeMounts:
        - name: config-volume
          mountPath: /app/configs/
        - name: converted-certs
          mountPath: /app/certs/proxy/
        readinessProbe:
          httpGet:
            path: /metadata
            port: 8082
          initialDelaySeconds: 15
          periodSeconds: 5
        resources:
          limits:
            cpu: "500m"
            memory: "256Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
      volumes:
      - name: config-volume
        configMap:
          name: samlproxy-config
      - name: cert-volume
        secret:
          secretName: proxy-tls-cert
      - name: converted-certs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: samlproxy
  namespace: saml-tools
spec:
  selector:
    app: samlproxy
  ports:
  - port: 8082
    targetPort: 8082
    name: http
  type: ClusterIP